{"version":3,"sources":["app.js","checkForVictory.js","gameFinish.js"],"names":["board","document","getElementById","scoreFirstPlayerElement","scoreSecondPlayerElement","scoreFirstPlayer","Number","textContent","scoreSecondPlayer","currentText","getElementsByTagName","gameState","isX","isWin","onclick","event","currentSquareID","target","id","classList","add","innerText","checkForVictory","gameEnd","startGameButton","location","reload","startPlayAgainButton","style","display","i","children","length","remove","addScore","winner","String","x","lines","a","b","c","ChangeText","includes","str"],"mappings":"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","file":"script.js","sourcesContent":["const board = document.getElementById('board');\r\n\r\nconst scoreFirstPlayerElement = document.getElementById('scoreFirstPlayerElement');\r\nconst scoreSecondPlayerElement = document.getElementById('scoreSecondPlayerElement');\r\n\r\nlet scoreFirstPlayer = Number(scoreFirstPlayerElement.textContent);\r\nlet scoreSecondPlayer = Number(scoreSecondPlayerElement.textContent);\r\n\r\nconst currentText = document.getElementsByTagName(\"span\")[0];\r\n\r\nlet gameState = [1, 1, 1, 1, 1, 1, 1, 1, 1];\r\nlet isX = true;\r\nlet isWin = false;\r\n\r\nboard.onclick = (event) => {\r\n  let currentSquareID = event.target.id;\r\n  if (isWin === true) return;\r\n  if (gameState[currentSquareID[0]] !== 1) return;\r\n  if (isX === true) {\r\n    event.target.classList.add(\"cross\");\r\n    gameState[currentSquareID[0]] = \"x\";\r\n    currentText.innerText = \"Ходит: О\";\r\n    isX = false;\r\n    isWin = checkForVictory(\"x\", gameState);\r\n  }\r\n  else {\r\n    event.target.classList.add(\"zero\");\r\n    gameState[currentSquareID[0]] = \"o\";\r\n    currentText.innerText = \"Ходит: X\";\r\n    isX = true;\r\n    isWin = checkForVictory(\"o\", gameState);\r\n  };\r\n\r\n  gameEnd(gameState, isX, isWin, currentText);\r\n  return;\r\n};\r\n\r\nstartGameButton.onclick = () => {\r\n  location.reload();\r\n};\r\n\r\nstartPlayAgainButton.onclick = () => {\r\n  currentText.style.display = \"block\";\r\n  currentText.innerText = \"Ходит: X\";\r\n  gameState = [1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n  isWin = false;\r\n  isX = true;\r\n  for (let i = 0; i < board.children.length; i++) {\r\n    board.children[i].classList.remove('cross');\r\n    board.children[i].classList.remove('zero');\r\n  }\r\n};\r\n\r\nconst addScore = (winner) => {\r\n  if (winner === \"x\") {\r\n    scoreFirstPlayer += 1;\r\n    scoreFirstPlayerElement.innerText = String(scoreFirstPlayer);\r\n  }\r\n  else {\r\n    scoreSecondPlayer += 1;\r\n    scoreSecondPlayerElement.innerText = String(scoreSecondPlayer);\r\n  };\r\n};\r\n","const checkForVictory = (x, gameState) => {\r\n    const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if ((gameState[a] != 1) && (gameState[a] === gameState[b]) && (gameState[a] === gameState[c])) {\r\n      addScore(x);\r\n      return true;\r\n    };\r\n  };\r\n  return false;\r\n};\r\n","const gameEnd = (gameState, isX, isWin, currentText) => {\r\n  if (isWin === true) {\r\n    if (isX === true) {\r\n      ChangeText(\"Победил О\", currentText);\r\n    }\r\n    else {\r\n      ChangeText(\"Победил X\", currentText);\r\n    };\r\n  };\r\n\r\n  if ((gameState.includes(1) === false) && (isWin === false)) {\r\n    ChangeText(\"Ничья\", currentText);\r\n  };\r\n};\r\n\r\nconst ChangeText = (str, currentText) => {\r\n  currentText.innerText = str;\r\n};\r\n"]}